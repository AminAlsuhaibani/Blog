[{"content":"","permalink":"http://localhost:1313/hugo-PaperMod/blog/my-first-post/","summary":"","title":"My First Blog"},{"content":"2. Equality? More Like a Choose-Your-Own-Adventure Why settle for one way of comparing things when you can have two? JavaScript offers both == and ===—with == being the wild card. If you’re feeling adventurous (or just confused), try predicting the outcome of comparisons. Spoiler: it’s usually not what you expect!\nExample:\nconsole.log(0 == false); // true console.log(0 === false); // false ","permalink":"http://localhost:1313/hugo-PaperMod/blog/equality-adventure/","summary":"\u003ch2 id=\"2-equality-more-like-a-choose-your-own-adventure\"\u003e2. Equality? More Like a Choose-Your-Own-Adventure\u003c/h2\u003e\n\u003cp\u003eWhy settle for one way of comparing things when you can have two? JavaScript offers both \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e===\u003c/code\u003e—with \u003ccode\u003e==\u003c/code\u003e being the wild card. If you’re feeling adventurous (or just confused), try predicting the outcome of comparisons. Spoiler: it’s usually not what you expect!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// true\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// false\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Equality? More Like a Choose-Your-Own-Adventure"},{"content":"1. The Mystery of Type Coercion Ever wondered why [] + [] turns into an empty string and not a number? JavaScript loves to play tricks on you! Forget strict typing—JavaScript’s type coercion means that adding a number to a string might just result in a string. It’s like expecting a cat to behave like a dog—utterly unpredictable!\nExample:\nconsole.log(5 + \u0026#34;5\u0026#34;); // \u0026#34;55\u0026#34;, not 10! ","permalink":"http://localhost:1313/hugo-PaperMod/blog/post/","summary":"\u003ch2 id=\"1-the-mystery-of-type-coercion\"\u003e1. The Mystery of Type Coercion\u003c/h2\u003e\n\u003cp\u003eEver wondered why \u003ccode\u003e[] + []\u003c/code\u003e turns into an empty string and not a number? JavaScript loves to play tricks on you! Forget strict typing—JavaScript’s type coercion means that adding a number to a string might just result in a string. It’s like expecting a cat to behave like a dog—utterly unpredictable!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026#34;55\u0026#34;, not 10!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Why You NEVER Use JavaScript"},{"content":"","permalink":"http://localhost:1313/hugo-PaperMod/blog/my-first-post/","summary":"","title":"My First Blog"},{"content":"2. Equality? More Like a Choose-Your-Own-Adventure Why settle for one way of comparing things when you can have two? JavaScript offers both == and ===—with == being the wild card. If you’re feeling adventurous (or just confused), try predicting the outcome of comparisons. Spoiler: it’s usually not what you expect!\nExample:\nconsole.log(0 == false); // true console.log(0 === false); // false ","permalink":"http://localhost:1313/hugo-PaperMod/blog/equality-adventure/","summary":"\u003ch2 id=\"2-equality-more-like-a-choose-your-own-adventure\"\u003e2. Equality? More Like a Choose-Your-Own-Adventure\u003c/h2\u003e\n\u003cp\u003eWhy settle for one way of comparing things when you can have two? JavaScript offers both \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e===\u003c/code\u003e—with \u003ccode\u003e==\u003c/code\u003e being the wild card. If you’re feeling adventurous (or just confused), try predicting the outcome of comparisons. Spoiler: it’s usually not what you expect!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// true\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// false\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Equality? More Like a Choose-Your-Own-Adventure"},{"content":"1. The Mystery of Type Coercion Ever wondered why [] + [] turns into an empty string and not a number? JavaScript loves to play tricks on you! Forget strict typing—JavaScript’s type coercion means that adding a number to a string might just result in a string. It’s like expecting a cat to behave like a dog—utterly unpredictable!\nExample:\nconsole.log(5 + \u0026#34;5\u0026#34;); // \u0026#34;55\u0026#34;, not 10! ","permalink":"http://localhost:1313/hugo-PaperMod/blog/never-use-javascript/","summary":"\u003ch2 id=\"1-the-mystery-of-type-coercion\"\u003e1. The Mystery of Type Coercion\u003c/h2\u003e\n\u003cp\u003eEver wondered why \u003ccode\u003e[] + []\u003c/code\u003e turns into an empty string and not a number? JavaScript loves to play tricks on you! Forget strict typing—JavaScript’s type coercion means that adding a number to a string might just result in a string. It’s like expecting a cat to behave like a dog—utterly unpredictable!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026#34;55\u0026#34;, not 10!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Why You NEVER Use JavaScript"}]